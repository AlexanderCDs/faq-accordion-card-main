{"version":3,"sources":["assets/svgs/illustration-woman-online-desktop.svg","components/cards.js","utils/informations.js","App.js","reportWebVitals.js","index.js"],"names":["CardFAQ","props","useState","items","context","setContext","handleClick","key","map","item","index","active","className","alt","src","illustration","ItemFAQ","id","question","response","onClick","questions","App","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAAe,MAA0B,8D,OCQlC,SAASA,EAAQC,GACpB,MAAgCC,mBAASD,EAAME,OAA/C,mBAAQC,EAAR,KAAiBC,EAAjB,KACMC,EAAc,SAACC,GACjB,IAAIJ,EAAQC,EAAQI,KAAI,SAACC,EAAMC,GAI3B,OAHAD,EAAKE,OAASF,EAAKF,MAAQA,EACP,WAAhBE,EAAKE,OAAsB,GAAK,SAClC,GACKF,KAEXJ,EAAWF,IAEf,OACI,sBAAKS,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKC,IAAI,MAAMD,UAAU,MAAME,IAAKC,MAExC,sBAAKH,UAAU,gBAAf,UACI,oBAAIA,UAAU,cAAd,iBACA,6BACKR,EAAQI,KAAI,SAACC,EAAMC,GAChB,OACI,cAACM,EAAD,CACIC,GAAIR,EAAKF,IACTI,OAAQF,EAAKE,OAEbO,SAAUT,EAAKS,SACfC,SAAUV,EAAKU,SACfb,YAAaA,GAHRG,EAAKF,gBAYnC,SAASS,EAAQf,GACpB,IAAQiB,EAAgDjB,EAAhDiB,SAAUC,EAAsClB,EAAtCkB,SAAUb,EAA4BL,EAA5BK,YAAaK,EAAeV,EAAfU,OAAQM,EAAOhB,EAAPgB,GACjD,OACI,qBAAIL,UAAU,gBAAd,UACI,sBAAKK,GAAIA,EAAIL,UAAS,mBAAcD,GAAUS,QAAS,WAAMd,EAAYW,IAAzE,UACI,sBAAML,UAAS,iBAAf,SACKM,IAEL,qBAAKN,UAAU,cAAf,SACI,sBAAMA,UAAS,gBAAWD,UAGlC,qBAAKC,UAAS,mBAAcD,GAA5B,SACKQ,OAMFnB,IC9BAqB,EA5BU,CACrB,CACEd,IAAK,aACLW,SAAU,qCACVC,SAAU,qHAEZ,CACEZ,IAAK,aACLW,SAAU,wCACVC,SAAU,oFAEZ,CACEZ,IAAK,aACLW,SAAU,8BACVC,SAAU,qJAEZ,CACEZ,IAAK,aACLW,SAAU,+BACVC,SAAU,kFAEZ,CACEZ,IAAK,aACLW,SAAU,qCACVC,SAAU,iGCTDG,MAXf,WACE,OACE,qBAAKV,UAAU,YAAf,SACE,cAACZ,EAAD,CACEuB,MAAK,MACLpB,MAAOkB,OCFAG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.bae3c4eb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/illustration-woman-online-desktop.843eb114.svg\";","/** \r\n* @author: Alexander Chi\r\n* @description:\r\n* @date: 02/Septiembre/2021\r\n**/  \r\nimport React, { useState } from 'react';  \r\nimport illustration from '../assets/svgs/illustration-woman-online-desktop.svg';\r\n\r\nexport function CardFAQ(props) {   \r\n    const [ context, setContext ] = useState(props.items);  \r\n    const handleClick = (key) => {  \r\n        let items = context.map((item, index) => {\r\n            item.active = item.key === key \r\n            ? ( item.active === 'active' ? '' : 'active' )\r\n            : '';\r\n            return item;\r\n        }) \r\n        setContext(items);\r\n    }\r\n    return (    \r\n        <div className=\"card__faq\">\r\n            <div className=\"card__img\">\r\n                <img alt=\"FAQ\" className=\"img\" src={illustration} />\r\n            </div> \r\n            <div className=\"card__content\">\r\n                <h3 className=\"card__title\">FAQ</h3>\r\n                <ul>\r\n                    {context.map((item, index) => {\r\n                        return (\r\n                            <ItemFAQ \r\n                                id={item.key}\r\n                                active={item.active}\r\n                                key={item.key}\r\n                                question={item.question}\r\n                                response={item.response}\r\n                                handleClick={handleClick}/>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport function ItemFAQ(props) {\r\n    const { question, response, handleClick, active, id } = props;   \r\n    return (\r\n        <li className=\"item__collaps\">\r\n            <div id={id} className={`question ${active}`} onClick={()=> {handleClick(id)}}>\r\n                <span className={`question__text`}>\r\n                    {question}\r\n                </span> \r\n                <div className=\"item__arrow\">\r\n                    <span className={`arrow ${active}`}></span>\r\n                </div>\r\n            </div> \r\n            <div className={`response ${active}`}>\r\n                {response}\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default CardFAQ;","/** \r\n* @author: Alexander Chi\r\n* @description:\r\n* @date: 02/Septiembre/2021\r\n**/ \r\nexport const questions = [\r\n    {\r\n      key: 'question-1',\r\n      question: 'How may team members can I invite?', \r\n      response: 'You can invite up to 2 additional users on the Free plan. There is no limit on team members for the Premium plan.'\r\n    },\r\n    {\r\n      key: 'question-2',\r\n      question: 'What is the maximum file upload size?', \r\n      response: 'No more than 2G. All files in your account must fit your allotted storage space.'\r\n    },\r\n    {\r\n      key: 'question-3',\r\n      question: 'How do I reset my password?', \r\n      response: 'Click “Forgot password” from the login page or “Change password” from your profile page. A reset link will be emailed to you.'\r\n    },\r\n    {\r\n      key: 'question-4',\r\n      question: 'Can I cancel my subcription?', \r\n      response: 'Yes! Send us a message and we’ll process your request no questions asked.'\r\n    },\r\n    {\r\n      key: 'question-5',\r\n      question: 'Do you provide additional support?', \r\n      response: 'Chat and email support is available 24/7. Phone lines are open during normal business hours.'\r\n    }\r\n];\r\n\r\nexport default questions;","/** \n* @author: Alexander Chi\n* @description:\n* @date: 02/Septiembre/2021\n**/ \nimport './App.scss';\nimport {CardFAQ} from './components/cards';\nimport questions from './utils/informations';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <CardFAQ \n        title={`FAQ`}\n        items={questions}\n      ></CardFAQ>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}